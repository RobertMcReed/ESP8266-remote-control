# adds var/www/index.css to a <style> tag and var/www/index.js to a <script> tag in var/www/index.html and writes it to progmem in include/html.h as var HTML
with open('include/html.h', 'w') as outfile:
    html_h = '// DO NOT EDIT THIS FILE. IT IS GENERATED.\n'
    html_h += 'const char HTML[] PROGMEM = R"rawliteral(\n'

    with open('var/www/index.html', 'r') as index_html_f:
        html_lines_raw = index_html_f.readlines()
    
    with open('var/www/index.css', 'r') as index_css_f:
        css_lines = index_css_f.readlines()
            
    with open('var/www/index.js', 'r') as index_js_f:
        js_lines = index_js_f.readlines()

    html_lines = [line for line in html_lines_raw if 'index.css' not in line and 'index.js' not in line]
    css_added, js_added = False, False
    for idx, line in enumerate(html_lines):
        head = '</head>\n'
        if not css_added and head in line:
            parent_spaces = line.replace(head, '') + '  '
            child_spaces = parent_spaces + '  '
            spaced_css_lines = [parent_spaces + '<style>\n']
            [spaced_css_lines.append(child_spaces + css_line) for css_line in css_lines]
            spaced_css_lines.append(parent_spaces + '</style>\n')
            html_lines.insert(idx, ''.join(spaced_css_lines))
            css_added = True

        
        body = '</body>\n'
        if not js_added and body in line:
            parent_spaces = line.replace(body, '') + '  '
            child_spaces = parent_spaces + ' '
            spaced_js_lines = [parent_spaces + '<script>\n']
            [spaced_js_lines.append(child_spaces + js_line) for js_line in js_lines]
            spaced_js_lines.append(parent_spaces + '</script>\n')
            html_lines.insert(idx, ''.join(spaced_js_lines))
            js_added = True

    html_h += ''.join(html_lines) + ')rawliteral";'
    outfile.write(html_h)
